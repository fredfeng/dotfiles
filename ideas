Type: Program Synthesis
Given this simple question: How to read file line by line?

Can we synthesis this code into the program from stackoverflow?
http://stackoverflow.com/questions/5868369/how-to-read-a-large-text-file-line-by-line-using-java
BufferedReader br = new BufferedReader(new FileReader(file));
String line;
while ((line = br.readLine()) != null) {
   // process the line.
}
br.close();

Type: Security 
DroidSafe looks like very sound and precise, but can we improve its performance?
It can not scale in those popular apps in Google Play, I bet.

Type: Security
Susi looks like mising 40% of src/sink according to DroidSafe's paper in NDSS15, what's the reason?

Type: SE
Recently I found that if I simply used the reachability of the lengthy operations as criterias to check Android performance bugs, it will generate several false positives.
Under what condition that a lengthy operation(transitively invoked by main thread) will become an issue?

Type: SE
Can we encode the programs as a language model and use the similarity of two sentence to perform clone detection?

Type: Mobile
Saswat came up with the idea to refine an imprecise ICCG with minimum effort through the help of demand driven call graph + heuristic to rank the edges

Type: Program Synthesis
If we replace all the reflections with unknow holes, can we recover them with normal function calls which are more friendly to program analysis?
(Both isil and calvin said this idea is a crap, maybe.)

Same technique can be applied in security area. Those programs are performing a lot of obfuscation in all levels. Can we transform the whole program to a human readable version?


Type: NLP
Given a pseudo-description of the algorithm, can we generate the correct implementation?
http://en.wikipedia.org/wiki/Dijkstra's_algorithm
http://en.wikipedia.org/wiki/Quicksort

Can we automatically generate regular expression based on the test of the question?

Can we automatically solve complicated algebra problems based on the text of the question?

Can we automatically generate type-state properties based on the description of the software?
